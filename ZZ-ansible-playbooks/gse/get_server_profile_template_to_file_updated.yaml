- hosts: localhost 
  vars:
    - config: "{{ playbook_dir }}/{{ oneview_config }}"
    - server_profile_template_name: ''
    - dest: "{{ playbook_dir }}/serverprofiletemplate/"
    - server_profile_template_clean_data: {}
  tasks:
    - name: Gather facts about the Server Profile Template by name
      oneview_server_profile_template_facts:
        config: "{{ config }}"
        name: "{{ server_profile_template_name }}"
      delegate_to: localhost
    - debug: var=server_profile_templates

    - set_fact:
        server_profile_template_data: "{{ server_profile_templates[0] }}"
      when: server_profile_templates|length > 0
    - meta: end_play
      when: server_profile_templates|length == 0

    - set_fact:
        dest: "{{ dest + server_profile_template_data.name + '.json' }}"
    - debug:
        msg: "{{ dest }}"

    - debug:
        msg: "{{ server_profile_template_data.enclosureGroupUri }}"

    # Check if enclosure name is defined 
    # Fetch enclosure data and fetch enclosure name for enclosure uri in server profile template
    # Add enclosure name to server profile template
    - name: Gather facts about an Enclosure Group by name
      oneview_enclosure_group_facts:
        config: "{{ config }}"
      when: server_profile_template_data.enclosureGroupUri is defined
      delegate_to: localhost
    - debug: var=enclosure_groups
      when: server_profile_template_data.enclosureGroupUri is defined

    - set_fact:
        enclosure_group_name: "{{ item.name }}"
      when: server_profile_template_data.enclosureGroupUri is defined and item.uri == server_profile_template_data.enclosureGroupUri
      loop: "{{ enclosure_groups }}"

    - debug:
        msg: "{{ enclosure_group_name }}"
      when: server_profile_template_data.enclosureGroupUri

    - set_fact:
        server_profile_template_data: "{{ server_profile_template_data | combine({'enclosureGroupName': enclosure_group_name}, recursive=true) }}"
      when: server_profile_template_data.enclosureGroupUri  is defined and enclosure_group_name is defined

    # Check if serverhardwaretype name is defined
    # Fetch serverhardwaretype data and fetch serverhardwaretype name for serverhardwaretype uri in server profile template
    # Add serverhardwaretype name to server profile template
    - name: Gather facts about all Server Hardware Types
      oneview_server_hardware_type_facts:
        config: "{{ config }}"
      delegate_to: localhost
    - debug: var=server_hardware_types
      when: server_profile_template_data.serverHardwareTypeUri is defined

    - set_fact:
        server_hardware_type_name: "{{ item.name }}"
      when: server_profile_template_data.serverHardwareTypeUri is defined and item.uri == server_profile_template_data.serverHardwareTypeUri
      loop: "{{ server_hardware_types }}"

    - debug:
        msg: "{{ server_hardware_type_name }}"
      when: server_profile_template_data.serverHardwareTypeUri

    - set_fact:
        server_profile_template_data: "{{ server_profile_template_data | combine({'serverHardwareTypeName': server_hardware_type_name}, recursive=true) }}"
      when: server_profile_template_data.serverHardwareTypeUri  is defined and server_hardware_type_name is defined

    # Check if scope name is defined
    # Fetch scope data and fetch scope name for scope uri in server profile template
    # Add scope name to server profile template
    - name: Gather facts about all Scopes
      oneview_scope_facts:
        config: "{{ config }}"
      delegate_to: localhost
      when: server_profile_template_data.scopesUri is defined
    - debug: var=scopes

    - set_fact:
        scope_name: "{{ item.name }}"
      when: server_profile_template_data.scopesUri is defined and item.uri == server_profile_template_data.scopesUri
      loop: "{{ scopes }}"

#    - debug:
#        msg: "{{ scope_name }}"
#      when: server_profile_template_data.scopesUri is defined

#    - set_fact:
#        server_profile_template_data: "{{ server_profile_template_data | combine({'scopesName': scope_name}, recursive=true) }}"
#      when: server_profile_template_data.scopesUri  is defined and scope_name is defined

    # Check if firmware baseline name is defined
    # Fetch firmware baseline data and fetch firmware baseline name for firmware baseline uri in server profile template
    # Add firmware baseline name to server profile template
    - name: Gather facts about all Firmware Drivers
      oneview_firmware_driver_facts:
        config: "{{ config }}"
      when: server_profile_template_data.firmware.firmwareBaselineUri is defined
    - debug: var=firmware_drivers

    - set_fact:
        firmware_driver_name: "{{ item.name }}"
      when: server_profile_template_data.firmware.firmwareBaselineUri is defined and item.uri == server_profile_template_data.firmware.firmwareBaselineUri
      loop: "{{ firmware_drivers }}"

    - debug:
        msg: "{{ firmware_driver_name }}"
      when: server_profile_template_data.firmware.firmwareBaselineUri is defined

    - set_fact:
        firmware: "{{ server_profile_template_data.firmware | combine({'firmwareBaselineName': firmware_driver_name}, recursive=true) }}"
      when: server_profile_template_data.firmware.firmwareBaselineUri  is defined and firmware_driver_name is defined
    - set_fact:
        server_profile_template_data: "{{ server_profile_template_data | combine({'firmware': firmware}, recursive=true) }}"
      when: server_profile_template_data.firmware.firmwareBaselineUri  is defined and firmware_driver_name is defined
   
    - set_fact:
        network_data: []
        updated_connection_data: []
      when: server_profile_template_data.connectionSettings.connections|length > 0
    - name: Gather facts about an Ethernet Network by name
      oneview_ethernet_network_facts:
        config: "{{ config }}"
      delegate_to: localhost
      when: server_profile_template_data.connectionSettings.connections|length > 0
    - debug: var=ethernet_networks

    - set_fact:
        network_data: "{{ network_data + [ item.0 ] }}"
      with_nested:
        - "{{ ethernet_networks }}"
        - "{{ server_profile_template_data.connectionSettings.connections }}"
      when:  item.0.uri == item.1.networkUri and server_profile_template_data.connectionSettings.connections|length > 0

    - name: Gather facts about all Fibre Channel Networks
      oneview_fc_network_facts:
        config: "{{ config }}"
      delegate_to: localhost
      when: server_profile_template_data.connectionSettings.connections|length > 0
    - debug: var=fc_networks


    - set_fact:
         network_data: "{{ network_data + [ item.0 ] }}"
      with_nested:
        - "{{ fc_networks }}"
        - "{{ server_profile_template_data.connectionSettings.connections }}"
      when:  item.0.uri == item.1.networkUri and server_profile_template_data.connectionSettings.connections|length > 0


    - name: Gather facts about all FCoE Networks
      oneview_fcoe_network_facts:
        config: "{{ config }}"
      delegate_to: localhost
      when: server_profile_template_data.connectionSettings.connections|length > 0
    - debug: var=fcoe_networks


    - set_fact:
         network_data: "{{ network_data + [ item.0 ] }}"
      with_nested:
        - "{{ fcoe_networks }}"
        - "{{ server_profile_template_data.connectionSettings.connections }}"
      when:  item.0.uri == item.1.networkUri and server_profile_template_data.connectionSettings.connections|length > 0
  
    - name: Gather facts about all Network Sets
      oneview_network_set_facts:
        config: '{{ config }}'
      delegate_to: localhost
      when: server_profile_template_data.connectionSettings.connections|length > 0
    - debug: var=network_sets

    - set_fact:
         network_data: "{{ network_data + [ item.0 ] }}"
      with_nested:
        - "{{ network_sets }}"
        - "{{ server_profile_template_data.connectionSettings.connections }}"
      when:  item.0.uri == item.1.networkUri and server_profile_template_data.connectionSettings.connections|length > 0


    - debug:
        msg: "Checking: {{ network_data }}"
      when: server_profile_template_data.connectionSettings.connections|length > 0
    - debug:
        msg:
          - "{{ item.0.networkUri }}"
          - "{{ item.1.name }}"
      with_nested:
        - "{{ server_profile_template_data.connectionSettings.connections }}"
        - "{{ network_data | unique }}"
      when: item.0.networkUri == item.1.uri and server_profile_template_data.connectionSettings.connections|length > 0

    - set_fact:
        updated_connection_data: "{{ [ (item.0 | combine({'networkName': item.1.name}, recursive=true)) ]  + updated_connection_data }}"
#        updated_connection_data: "{{ updated_connection_data +  connection_data }}"
      with_nested:
        - "{{ server_profile_template_data.connectionSettings.connections }}"
        - "{{ network_data | unique }}"
      when: item.0.networkUri == item.1.uri and server_profile_template_data.connectionSettings.connections|length > 0

    - debug:
        msg: "Test: {{ updated_connection_data }}"
      when: server_profile_template_data.connectionSettings.connections|length > 0

    - set_fact:
        connectionSettings: "{{ server_profile_template_data.connectionSettings |combine({ 'connections': updated_connection_data }, recursive=true) }}"
      when: server_profile_template_data.connectionSettings.connections|length > 0

    - debug:
        msg: "{{ connectionSettings }}"
      when: server_profile_template_data.connectionSettings.connections|length > 0
    - set_fact:
        server_profile_template_data: "{{ server_profile_template_data | combine({'connectionSettings': connectionSettings}, recursive=true) }}"
      when: server_profile_template_data.connectionSettings.connections|length > 0

    # fetch storage information from oneview
    - name: Gather facts about all Storage Volume 
      oneview_volume_facts:
        config: "{{ config }}"
      delegate_to: localhost
      when: server_profile_template_data.sanStorage.volumeAttachments|length > 0
    - debug: var=storage_volumes

    - set_fact:
        storage_volume_data: []
        storage_system_data: []
        updated_volume_data: []
        updated_storage_volume_data: []
      when: server_profile_template_data.sanStorage.volumeAttachments|length > 0
    - set_fact:
        storage_volume_data: "{{ storage_volume_data + [ item.0 ] }}"
      with_nested:
        - "{{ storage_volumes }}"
        - "{{ server_profile_template_data.sanStorage.volumeAttachments }}"
      when:  item.0.uri == item.1.volumeUri and server_profile_template_data.sanStorage.volumeAttachments|length > 0
       
    - debug:
        msg: "check:{{ storage_volume_data }}"
      when: server_profile_template_data.sanStorage.volumeAttachments|length > 0        
   
    - name: Gather facts about all Storage Systems
      oneview_storage_system_facts:
        config: "{{ config }}"
      delegate_to: localhost
      when: server_profile_template_data.sanStorage.volumeAttachments|length > 0
    - debug: var=storage_systems
       
    - name: Gather facts about all Storage Systems
      oneview_storage_system_facts:
        config: "{{ config }}"
      delegate_to: localhost
      when: server_profile_template_data.sanStorage.volumeAttachments|length > 0
    - debug: var=storage_systems


    - set_fact:
        storage_system_data: "{{ storage_system_data + [ item.0 ] }}"
      with_nested:
        - "{{ storage_systems }}"
        - "{{ server_profile_template_data.sanStorage.volumeAttachments }}"
      when:  item.0.uri == item.1.volumeStorageSystemUri and server_profile_template_data.sanStorage.volumeAttachments|length > 0

    - debug:
        msg: "check:{{ storage_system_data }}"
      when: server_profile_template_data.sanStorage.volumeAttachments|length > 0
    - set_fact:
        updated_volume_data: "{{ [ (item.0 | combine({'name': item.1.name}, recursive=true)) ]  + updated_volume_data }}"
      with_nested:
        - "{{ server_profile_template_data.sanStorage.volumeAttachments }}"
        - "{{ storage_volume_data | unique }}"
      when: item.0.volumeUri == item.1.uri and server_profile_template_data.sanStorage.volumeAttachments|length > 0

    - set_fact:
        updated_storage_volume_data: "{{ [ (item.0 | combine({'volumeStorageSystemName': item.1.name}, recursive=true)) ]  + updated_storage_volume_data }}"
      with_nested:
        - "{{ updated_volume_data }}"
        - "{{ storage_system_data | unique }}"
      when: item.0.volumeStorageSystemUri == item.1.uri and server_profile_template_data.sanStorage.volumeAttachments|length > 0

    - debug:
        msg: "{{ updated_storage_volume_data }}"
      when: server_profile_template_data.sanStorage.volumeAttachments|length > 0
    - set_fact:
        sanStorage: "{{ server_profile_template_data.sanStorage | combine({'volumeAttachments': updated_storage_volume_data}, recursive=true) }}"
      when: server_profile_template_data.sanStorage.volumeAttachments|length > 0
    - set_fact:
        server_profile_template_data: "{{ server_profile_template_data | combine({'sanStorage': sanStorage}, recursive=true) }}"
      when: server_profile_template_data.sanStorage.volumeAttachments|length > 0 

    # Remove all URI reference so as to make template clean
    - set_fact:
        server_profile_template_clean_data: "{{server_profile_template_clean_data |combine({item.key: item.value})}}"
      when: "{{item.key not in ['created','modified','status','state','eTag','uri', 'enclosureGroupUri', 'serverHardwareTypeUri', 'scopeUri', 'firmware.firmwareBaselineUri']}}"
      with_dict: "{{server_profile_template_data}}"

    - debug: 
        msg: "{{ server_profile_template_clean_data  }}"


    - copy: content="{{ server_profile_template_clean_data }}" dest="{{ dest }}"
